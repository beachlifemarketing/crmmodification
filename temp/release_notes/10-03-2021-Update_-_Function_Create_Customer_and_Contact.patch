Index: application/controllers/admin/Clients.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- application/controllers/admin/Clients.php	(revision 39ef2a10e3086e89f45fdff68bbabd525aed4e05)
+++ application/controllers/admin/Clients.php	(revision 9e714bebf4297525013326e675f189303771f5f7)
@@ -15,8 +15,8 @@
 
         $this->load->model('contracts_model');
         $data['contract_types'] = $this->contracts_model->get_contract_types();
-        $data['groups']         = $this->clients_model->get_groups();
-        $data['title']          = _l('clients');
+        $data['groups'] = $this->clients_model->get_groups();
+        $data['title'] = _l('clients');
 
         $this->load->model('proposals_model');
         $data['proposal_statuses'] = $this->proposals_model->get_statuses();
@@ -84,27 +84,49 @@
                 if (!has_permission('customers', '', 'create')) {
                     access_denied('customers');
                 }
-
+                $this->load->model('clients_model');
                 $data = $this->input->post();
 
+
+                $contact_data = [
+                    'is_primary' => 0,
+                    'firstname' => $this->input->post('firstname'),
+                    'lastname' => $this->input->post('lastname'),
+                    'title' => "",
+                    'email' => $this->input->post('email'),
+                    'phonenumber' => "",
+                    'direction' => "",
+                    'invoice_emails' => isset($data['invoice_emails']) ? 1 : 0,
+                    'credit_note_emails' => isset($data['credit_note_emails']) ? 1 : 0,
+                    'estimate_emails' => isset($data['estimate_emails']) ? 1 : 0,
+                    'ticket_emails' => isset($data['ticket_emails']) ? 1 : 0,
+                    'contract_emails' => isset($data['contract_emails']) ? 1 : 0,
+                    'project_emails' => isset($data['project_emails']) ? 1 : 0,
+                    'task_emails' => isset($data['task_emails']) ? 1 : 0,
+                    'custom_fields' => isset($data['custom_fields']) && is_array($data['custom_fields']) ? $data['custom_fields'] : [],
+                ];
+
+
+                if (isset($data['password'])) {
+                    $contact_data['password'] = $this->input->post('password', false);
+                }
+
                 $save_and_add_contact = false;
                 if (isset($data['save_and_add_contact'])) {
                     unset($data['save_and_add_contact']);
                     $save_and_add_contact = true;
                 }
                 $id = $this->clients_model->add($data);
+
                 if (!has_permission('customers', '', 'view')) {
-                    $assign['customer_admins']   = [];
+                    $assign['customer_admins'] = [];
                     $assign['customer_admins'][] = get_staff_user_id();
                     $this->clients_model->assign_admins($assign, $id);
                 }
                 if ($id) {
-                    set_alert('success', _l('added_successfully', _l('client')));
-                    if ($save_and_add_contact == false) {
-                        redirect(admin_url('clients/client/' . $id));
-                    } else {
-                        redirect(admin_url('clients/client/' . $id . '?group=contacts&new_contact=true'));
-                    }
+                    $contact_data['userid'] = $id;
+                    $contactId = $this->clients_model->add_contact_via_customers_area($contact_data, $id);
+                    // TODO : use contactId
                 }
             } else {
                 if (!has_permission('customers', '', 'edit')) {
@@ -120,7 +142,7 @@
             }
         }
 
-        $group         = !$this->input->get('group') ? 'profile' : $this->input->get('group');
+        $group = !$this->input->get('group') ? 'profile' : $this->input->get('group');
         $data['group'] = $group;
 
         if ($group != 'contacts' && $contact_id = $this->input->get('contactid')) {
@@ -133,7 +155,7 @@
         if ($id == '') {
             $title = _l('add_new', _l('client_lowercase'));
         } else {
-            $client                = $this->clients_model->get($id);
+            $client = $this->clients_model->get($id);
             $data['customer_tabs'] = get_customer_profile_tabs();
 
             if (!$client) {
@@ -141,7 +163,7 @@
             }
 
             $data['contacts'] = $this->clients_model->get_contacts($id);
-            $data['tab']      = isset($data['customer_tabs'][$group]) ? $data['customer_tabs'][$group] : null;
+            $data['tab'] = isset($data['customer_tabs'][$group]) ? $data['customer_tabs'][$group] : null;
 
             if (!$data['tab']) {
                 show_404();
@@ -168,7 +190,7 @@
             } elseif ($group == 'credit_notes') {
                 $this->load->model('credit_notes_model');
                 $data['credit_notes_statuses'] = $this->credit_notes_model->get_statuses();
-                $data['credits_available']     = $this->credit_notes_model->total_remaining_credits_by_customer($id);
+                $data['credits_available'] = $this->credit_notes_model->total_remaining_credits_by_customer($id);
             } elseif ($group == 'payments') {
                 $this->load->model('payment_modes_model');
                 $data['payment_modes'] = $this->payment_modes_model->get();
@@ -189,22 +211,22 @@
                     $this->app_scripts->add('map-js', base_url($this->app_scripts->core_file('assets/js', 'map.js')) . '?v=' . $this->app_css->core_version());
 
                     $this->app_scripts->add('google-maps-api-js', [
-                        'path'       => 'https://maps.googleapis.com/maps/api/js?key=' . get_option('google_api_key') . '&callback=initMap',
+                        'path' => 'https://maps.googleapis.com/maps/api/js?key=' . get_option('google_api_key') . '&callback=initMap',
                         'attributes' => [
                             'async',
                             'defer',
-                            'latitude'       => "$client->latitude",
-                            'longitude'      => "$client->longitude",
+                            'latitude' => "$client->latitude",
+                            'longitude' => "$client->longitude",
                             'mapMarkerTitle' => "$client->company",
                         ],
-                        ]);
+                    ]);
                 }
             }
 
             $data['staff'] = $this->staff_model->get('', ['active' => 1]);
 
             $data['client'] = $client;
-            $title          = $client->company;
+            $title = $client->company;
 
             // Get all active staff members (used to add reminder)
             $data['members'] = $data['staff'];
@@ -241,13 +263,13 @@
             }
 
             if (is_array($customer_currency)) {
-                $customer_currency = (object) $customer_currency;
+                $customer_currency = (object)$customer_currency;
             }
 
             $data['customer_currency'] = $customer_currency;
 
             $slug_zip_folder = (
-                $client->company != ''
+            $client->company != ''
                 ? $client->company
                 : get_contact_full_name(get_primary_contact_user_id($client->userid))
             );
@@ -256,7 +278,7 @@
         }
 
         $data['bodyclass'] = 'customer-profile dynamic-create-groups';
-        $data['title']     = $title;
+        $data['title'] = $title;
 
         $this->load->view('admin/clients/client', $data);
     }
@@ -274,14 +296,15 @@
     {
         if (has_permission('customers', '', 'create')) {
             $companyName = trim($this->input->post('company'));
-            $response    = [
-                'exists'  => (bool) total_rows(db_prefix() . 'clients', ['company' => $companyName]) > 0,
+            $response = [
+                'exists' => (bool)total_rows(db_prefix() . 'clients', ['company' => $companyName]) > 0,
                 'message' => _l('company_exists_info', '<b>' . $companyName . '</b>'),
             ];
             echo json_encode($response);
         }
     }
 
+
     public function save_longitude_and_latitude($client_id)
     {
         if (!has_permission('customers', '', 'edit')) {
@@ -293,7 +316,7 @@
         $this->db->where('userid', $client_id);
         $this->db->update(db_prefix() . 'clients', [
             'longitude' => $this->input->post('longitude'),
-            'latitude'  => $this->input->post('latitude'),
+            'latitude' => $this->input->post('latitude'),
         ]);
         if ($this->db->affected_rows() > 0) {
             echo 'success';
@@ -311,9 +334,9 @@
             }
         }
         $data['customer_id'] = $customer_id;
-        $data['contactid']   = $contact_id;
+        $data['contactid'] = $contact_id;
         if ($this->input->post()) {
-            $data             = $this->input->post();
+            $data = $this->input->post();
             $data['password'] = $this->input->post('password', false);
 
             unset($data['contactid']);
@@ -328,7 +351,7 @@
                         die;
                     }
                 }
-                $id      = $this->clients_model->add_contact($data, $customer_id);
+                $id = $this->clients_model->add_contact($data, $customer_id);
                 $message = '';
                 $success = false;
                 if ($id) {
@@ -337,10 +360,10 @@
                     $message = _l('added_successfully', _l('contact'));
                 }
                 echo json_encode([
-                    'success'             => $success,
-                    'message'             => $message,
+                    'success' => $success,
+                    'message' => $message,
                     'has_primary_contact' => (total_rows(db_prefix() . 'contacts', ['userid' => $customer_id, 'is_primary' => 1]) > 0 ? true : false),
-                    'is_individual'       => is_empty_customer_company($customer_id) && total_rows(db_prefix() . 'contacts', ['userid' => $customer_id]) == 1,
+                    'is_individual' => is_empty_customer_company($customer_id) && total_rows(db_prefix() . 'contacts', ['userid' => $customer_id]) == 1,
                 ]);
                 die;
             }
@@ -348,18 +371,18 @@
                 if (!is_customer_admin($customer_id)) {
                     header($_SERVER['SERVER_PROTOCOL'] . ' 400 Bad error');
                     echo json_encode([
-                            'success' => false,
-                            'message' => _l('access_denied'),
-                        ]);
+                        'success' => false,
+                        'message' => _l('access_denied'),
+                    ]);
                     die;
                 }
             }
             $original_contact = $this->clients_model->get_contact($contact_id);
-            $success          = $this->clients_model->update_contact($data, $contact_id);
-            $message          = '';
+            $success = $this->clients_model->update_contact($data, $contact_id);
+            $message = '';
             $proposal_warning = false;
-            $original_email   = '';
-            $updated          = false;
+            $original_email = '';
+            $updated = false;
             if (is_array($success)) {
                 if (isset($success['set_password_email_sent'])) {
                     $message = _l('set_password_email_sent_to_client');
@@ -385,16 +408,16 @@
                         'email' => $original_contact->email,
                     ]) > 0 && ($original_contact->email != $contact->email)) {
                     $proposal_warning = true;
-                    $original_email   = $original_contact->email;
+                    $original_email = $original_contact->email;
                 }
             }
             echo json_encode([
-                    'success'             => $success,
-                    'proposal_warning'    => $proposal_warning,
-                    'message'             => $message,
-                    'original_email'      => $original_email,
-                    'has_primary_contact' => (total_rows(db_prefix() . 'contacts', ['userid' => $customer_id, 'is_primary' => 1]) > 0 ? true : false),
-                ]);
+                'success' => $success,
+                'proposal_warning' => $proposal_warning,
+                'message' => $message,
+                'original_email' => $original_email,
+                'has_primary_contact' => (total_rows(db_prefix() . 'contacts', ['userid' => $customer_id, 'is_primary' => 1]) > 0 ? true : false),
+            ]);
             die;
         }
         if ($contact_id == '') {
@@ -414,7 +437,7 @@
         }
 
         $data['customer_permissions'] = get_contact_permissions();
-        $data['title']                = $title;
+        $data['title'] = $title;
         $this->load->view('admin/clients/modals/contact', $data);
     }
 
@@ -431,7 +454,7 @@
     public function update_file_share_visibility()
     {
         if ($this->input->post()) {
-            $file_id           = $this->input->post('file_id');
+            $file_id = $this->input->post('file_id');
             $share_contacts_id = [];
 
             if ($this->input->post('share_contacts_id')) {
@@ -443,7 +466,7 @@
 
             foreach ($share_contacts_id as $share_contact_id) {
                 $this->db->insert(db_prefix() . 'shared_customer_files', [
-                    'file_id'    => $file_id,
+                    'file_id' => $file_id,
                     'contact_id' => $share_contact_id,
                 ]);
             }
@@ -474,8 +497,8 @@
         }
 
         $this->load->model('gdpr_model');
-        $data['purposes']   = $this->gdpr_model->get_consent_purposes($id, 'contact');
-        $data['consents']   = $this->gdpr_model->get_consents(['contact_id' => $id]);
+        $data['purposes'] = $this->gdpr_model->get_consent_purposes($id, 'contact');
+        $data['consents'] = $this->gdpr_model->get_consents(['contact_id' => $id]);
         $data['contact_id'] = $id;
         $this->load->view('admin/gdpr/contact_consent', $data);
     }
@@ -483,7 +506,7 @@
     public function update_all_proposal_emails_linked_to_customer($contact_id)
     {
         $success = false;
-        $email   = '';
+        $email = '';
         if ($this->input->post('update')) {
             $this->load->model('proposals_model');
 
@@ -493,8 +516,8 @@
 
             $proposals = $this->proposals_model->get('', [
                 'rel_type' => 'customer',
-                'rel_id'   => $contact->userid,
-                'email'    => $this->input->post('original_email'),
+                'rel_id' => $contact->userid,
+                'email' => $this->input->post('original_email'),
             ]);
             $affected_rows = 0;
 
@@ -553,7 +576,7 @@
                 access_denied('customers');
             }
         }
-        $contact      = $this->clients_model->get_contact($id);
+        $contact = $this->clients_model->get_contact($id);
         $hasProposals = false;
         if ($contact && is_gdpr()) {
             if (total_rows(db_prefix() . 'proposals', ['email' => $contact->email]) > 0) {
@@ -659,10 +682,10 @@
 
         if ($this->input->post()) {
             $this->load->library('app_bulk_pdf_export', [
-                'export_type'       => 'credit_notes',
-                'status'            => $this->input->post('credit_note_zip_status'),
-                'date_from'         => $this->input->post('zip-from'),
-                'date_to'           => $this->input->post('zip-to'),
+                'export_type' => 'credit_notes',
+                'status' => $this->input->post('credit_note_zip_status'),
+                'date_from' => $this->input->post('zip-from'),
+                'date_to' => $this->input->post('zip-to'),
                 'redirect_on_error' => admin_url('clients/client/' . $id . '?group=credit_notes'),
             ]);
 
@@ -682,10 +705,10 @@
 
         if ($this->input->post()) {
             $this->load->library('app_bulk_pdf_export', [
-                'export_type'       => 'invoices',
-                'status'            => $this->input->post('invoice_zip_status'),
-                'date_from'         => $this->input->post('zip-from'),
-                'date_to'           => $this->input->post('zip-to'),
+                'export_type' => 'invoices',
+                'status' => $this->input->post('invoice_zip_status'),
+                'date_from' => $this->input->post('zip-from'),
+                'date_to' => $this->input->post('zip-to'),
                 'redirect_on_error' => admin_url('clients/client/' . $id . '?group=invoices'),
             ]);
 
@@ -706,10 +729,10 @@
 
         if ($this->input->post()) {
             $this->load->library('app_bulk_pdf_export', [
-                'export_type'       => 'estimates',
-                'status'            => $this->input->post('estimate_zip_status'),
-                'date_from'         => $this->input->post('zip-from'),
-                'date_to'           => $this->input->post('zip-to'),
+                'export_type' => 'estimates',
+                'status' => $this->input->post('estimate_zip_status'),
+                'date_from' => $this->input->post('zip-from'),
+                'date_to' => $this->input->post('zip-to'),
                 'redirect_on_error' => admin_url('clients/client/' . $id . '?group=estimates'),
             ]);
 
@@ -729,12 +752,12 @@
         }
 
         $this->load->library('app_bulk_pdf_export', [
-                'export_type'       => 'payments',
-                'payment_mode'      => $this->input->post('paymentmode'),
-                'date_from'         => $this->input->post('zip-from'),
-                'date_to'           => $this->input->post('zip-to'),
-                'redirect_on_error' => admin_url('clients/client/' . $id . '?group=payments'),
-            ]);
+            'export_type' => 'payments',
+            'payment_mode' => $this->input->post('paymentmode'),
+            'date_from' => $this->input->post('zip-from'),
+            'date_to' => $this->input->post('zip-to'),
+            'redirect_on_error' => admin_url('clients/client/' . $id . '?group=payments'),
+        ]);
 
         $this->app_bulk_pdf_export->set_client_id($id);
         $this->app_bulk_pdf_export->set_client_id_column(db_prefix() . 'clients.userid');
@@ -760,7 +783,7 @@
         $this->load->library('import/import_customers', [], 'import');
 
         $this->import->setDatabaseFields($dbFields)
-                     ->setCustomFields(get_custom_fields('customers'));
+            ->setCustomFields(get_custom_fields('customers'));
 
         if ($this->input->post('download_sample') === 'true') {
             $this->import->downloadSample();
@@ -769,9 +792,9 @@
         if ($this->input->post()
             && isset($_FILES['file_csv']['name']) && $_FILES['file_csv']['name'] != '') {
             $this->import->setSimulation($this->input->post('simulate'))
-                          ->setTemporaryFileLocation($_FILES['file_csv']['tmp_name'])
-                          ->setFilename($_FILES['file_csv']['name'])
-                          ->perform();
+                ->setTemporaryFileLocation($_FILES['file_csv']['tmp_name'])
+                ->setFilename($_FILES['file_csv']['name'])
+                ->perform();
 
 
             $data['total_rows_post'] = $this->import->totalRows();
@@ -781,8 +804,8 @@
             }
         }
 
-        $data['groups']    = $this->clients_model->get_groups();
-        $data['title']     = _l('import');
+        $data['groups'] = $this->clients_model->get_groups();
+        $data['title'] = _l('import');
         $data['bodyclass'] = 'dynamic-create-groups';
         $this->load->view('admin/clients/import', $data);
     }
@@ -808,13 +831,13 @@
         if ($this->input->is_ajax_request()) {
             $data = $this->input->post();
             if ($data['id'] == '') {
-                $id      = $this->clients_model->add_group($data);
+                $id = $this->clients_model->add_group($data);
                 $message = $id ? _l('added_successfully', _l('customer_group')) : '';
                 echo json_encode([
                     'success' => $id ? true : false,
                     'message' => $message,
-                    'id'      => $id,
-                    'name'    => $data['name'],
+                    'id' => $id,
+                    'name' => $data['name'],
                 ]);
             } else {
                 $success = $this->clients_model->edit_group($data);
@@ -852,7 +875,7 @@
         hooks()->do_action('before_do_bulk_action_for_customers');
         $total_deleted = 0;
         if ($this->input->post()) {
-            $ids    = $this->input->post('ids');
+            $ids = $this->input->post('ids');
             $groups = $this->input->post('groups');
 
             if (is_array($ids)) {
@@ -889,10 +912,10 @@
         }
 
         unset($data['id']);
-        $data['creator']      = get_staff_user_id();
+        $data['creator'] = get_staff_user_id();
         $data['creator_name'] = get_staff_full_name($data['creator']);
-        $data['description']  = nl2br($data['description']);
-        $data['password']     = $this->encryption->encrypt($this->input->post('password', false));
+        $data['description'] = nl2br($data['description']);
+        $data['password'] = $this->encryption->encrypt($this->input->post('password', false));
 
         if (empty($data['port'])) {
             unset($data['port']);
@@ -918,7 +941,7 @@
             }
 
             $data['last_updated_from'] = get_staff_full_name(get_staff_user_id());
-            $data['description']       = nl2br($data['description']);
+            $data['description'] = nl2br($data['description']);
 
             if (!empty($data['password'])) {
                 $data['password'] = $this->encryption->encrypt($this->input->post('password', false));
@@ -947,9 +970,9 @@
 
     public function vault_encrypt_password()
     {
-        $id            = $this->input->post('id');
+        $id = $this->input->post('id');
         $user_password = $this->input->post('user_password', false);
-        $user          = $this->staff_model->get(get_staff_user_id());
+        $user = $this->staff_model->get(get_staff_user_id());
 
         if (!app_hasher()->CheckPassword($user_password, $user->password)) {
             header('HTTP/1.1 401 Unauthorized');
@@ -957,7 +980,7 @@
             die;
         }
 
-        $vault    = $this->clients_model->get_vault_entry($id);
+        $vault = $this->clients_model->get_vault_entry($id);
         $password = $this->encryption->decrypt($vault->password);
 
         $password = html_escape($password);
@@ -990,7 +1013,7 @@
         }
 
         $from = $this->input->get('from');
-        $to   = $this->input->get('to');
+        $to = $this->input->get('to');
 
         $data['statement'] = $this->clients_model->get_statement($customer_id, to_sql_date($from), to_sql_date($to));
 
@@ -1023,10 +1046,10 @@
         }
 
         $from = $this->input->get('from');
-        $to   = $this->input->get('to');
+        $to = $this->input->get('to');
 
         $send_to = $this->input->post('send_to');
-        $cc      = $this->input->post('cc');
+        $cc = $this->input->post('cc');
 
         $success = $this->clients_model->send_statement_to_email($customer_id, $send_to, $from, $to, $cc);
         // In case client use another language
@@ -1049,16 +1072,17 @@
         }
 
         $customer_id = $this->input->get('customer_id');
-        $from        = $this->input->get('from');
-        $to          = $this->input->get('to');
+        $from = $this->input->get('from');
+        $to = $this->input->get('to');
 
         $data['statement'] = $this->clients_model->get_statement($customer_id, to_sql_date($from), to_sql_date($to));
 
         $data['from'] = $from;
-        $data['to']   = $to;
+        $data['to'] = $to;
 
         $viewData['html'] = $this->load->view('admin/clients/groups/_statement', $data, true);
 
         echo json_encode($viewData);
     }
+
 }
Index: application/views/admin/clients/client_js.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- application/views/admin/clients/client_js.php	(revision 39ef2a10e3086e89f45fdff68bbabd525aed4e05)
+++ application/views/admin/clients/client_js.php	(revision 9e714bebf4297525013326e675f189303771f5f7)
@@ -5,329 +5,353 @@
  */
 ?>
 <script>
-Dropzone.options.clientAttachmentsUpload = false;
-var customer_id = $('input[name="userid"]').val();
-$(function() {
-
-    if ($('#client-attachments-upload').length > 0) {
-        new Dropzone('#client-attachments-upload', appCreateDropzoneOptions({
-            paramName: "file",
-            accept: function(file, done) {
-                done();
-            },
-            success: function(file, response) {
-                if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
-                    window.location.reload();
-                }
-            }
-        }));
-    }
+    Dropzone.options.clientAttachmentsUpload = false;
+    var customer_id = $('input[name="userid"]').val();
+    $(function () {
+        if ($('#client-attachments-upload').length > 0) {
+            new Dropzone('#client-attachments-upload', appCreateDropzoneOptions({
+                paramName: "file",
+                accept: function (file, done) {
+                    done();
+                },
+                success: function (file, response) {
+                    if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
+                        window.location.reload();
+                    }
+                }
+            }));
+        }
 
-    // Save button not hidden if passed from url ?tab= we need to re-click again
-    if (tab_active) {
-        $('body').find('.nav-tabs [href="#' + tab_active + '"]').click();
-    }
+        // Save button not hidden if passed from url ?tab= we need to re-click again
+        if (tab_active) {
+            $('body').find('.nav-tabs [href="#' + tab_active + '"]').click();
+        }
 
-    $('a[href="#customer_admins"]').on('click', function() {
-        $('.btn-bottom-toolbar').addClass('hide');
-    });
+        $('a[href="#customer_admins"]').on('click', function () {
+            $('.btn-bottom-toolbar').addClass('hide');
+        });
 
-    $('.profile-tabs a').not('a[href="#customer_admins"]').on('click', function() {
-        $('.btn-bottom-toolbar').removeClass('hide');
-    });
+        $('.profile-tabs a').not('a[href="#customer_admins"]').on('click', function () {
+            $('.btn-bottom-toolbar').removeClass('hide');
+        });
 
-    $("input[name='tasks_related_to[]']").on('change', function() {
-        var tasks_related_values = []
-        $('#tasks_related_filter :checkbox:checked').each(function(i) {
-            tasks_related_values[i] = $(this).val();
-        });
-        $('input[name="tasks_related_to"]').val(tasks_related_values.join());
-        $('.table-rel-tasks').DataTable().ajax.reload();
-    });
+        $("input[name='tasks_related_to[]']").on('change', function () {
+            var tasks_related_values = []
+            $('#tasks_related_filter :checkbox:checked').each(function (i) {
+                tasks_related_values[i] = $(this).val();
+            });
+            $('input[name="tasks_related_to"]').val(tasks_related_values.join());
+            $('.table-rel-tasks').DataTable().ajax.reload();
+        });
 
-    var contact_id = get_url_param('contactid');
-    if (contact_id) {
-        contact(customer_id, contact_id);
-    }
+        var contact_id = get_url_param('contactid');
+        if (contact_id) {
+            contact(customer_id, contact_id);
+        }
 
-    // consents=CONTACT_ID
-    var consents = get_url_param('consents');
-    if(consents){
-        view_contact_consent(consents);
-    }
+        // consents=CONTACT_ID
+        var consents = get_url_param('consents');
+        if (consents) {
+            view_contact_consent(consents);
+        }
 
-    // If user clicked save and add new contact
-    if (get_url_param('new_contact')) {
-        contact(customer_id);
-    }
+        // If user clicked save and add new contact
+        if (get_url_param('new_contact')) {
+            contact(customer_id);
+        }
 
-    $('body').on('change', '.onoffswitch input.customer_file', function(event, state) {
-        var invoker = $(this);
-        var checked_visibility = invoker.prop('checked');
-        var share_file_modal = $('#customer_file_share_file_with');
-        setTimeout(function() {
-            $('input[name="file_id"]').val(invoker.attr('data-id'));
-            if (checked_visibility && share_file_modal.attr('data-total-contacts') > 1) {
-                share_file_modal.modal('show');
-            } else {
-                do_share_file_contacts();
-            }
-        }, 200);
-    });
+        $('body').on('change', '.onoffswitch input.customer_file', function (event, state) {
+            var invoker = $(this);
+            var checked_visibility = invoker.prop('checked');
+            var share_file_modal = $('#customer_file_share_file_with');
+            setTimeout(function () {
+                $('input[name="file_id"]').val(invoker.attr('data-id'));
+                if (checked_visibility && share_file_modal.attr('data-total-contacts') > 1) {
+                    share_file_modal.modal('show');
+                } else {
+                    do_share_file_contacts();
+                }
+            }, 200);
+        });
 
-    $('.customer-form-submiter').on('click', function() {
-        var form = $('.client-form');
-        if (form.valid()) {
-            if ($(this).hasClass('save-and-add-contact')) {
-                form.find('.additional').html(hidden_input('save_and_add_contact', 'true'));
-            } else {
-                form.find('.additional').html('');
-            }
-            form.submit();
-        }
-    });
+        $('.customer-form-submiter').on('click', function () {
+            var form = $('.client-form');
+            if (form.valid()) {
+                if ($(this).hasClass('save-and-add-contact')) {
+                    form.find('.additional').html(hidden_input('save_and_add_contact', 'true'));
+                } else {
+                    form.find('.additional').html('');
+                }
+                form.submit();
+            }
+        });
 
-    if (typeof(Dropbox) != 'undefined' && $('#dropbox-chooser').length > 0) {
-        document.getElementById("dropbox-chooser").appendChild(Dropbox.createChooseButton({
-            success: function(files) {
-                saveCustomerProfileExternalFile(files, 'dropbox');
-            },
-            linkType: "preview",
-            extensions: app.options.allowed_files.split(','),
-        }));
-    }
+        if (typeof (Dropbox) != 'undefined' && $('#dropbox-chooser').length > 0) {
+            document.getElementById("dropbox-chooser").appendChild(Dropbox.createChooseButton({
+                success: function (files) {
+                    saveCustomerProfileExternalFile(files, 'dropbox');
+                },
+                linkType: "preview",
+                extensions: app.options.allowed_files.split(','),
+            }));
+        }
 
-    /* Customer profile tickets table */
-    $('.table-tickets-single').find('#th-submitter').removeClass('toggleable');
+        /* Customer profile tickets table */
+        $('.table-tickets-single').find('#th-submitter').removeClass('toggleable');
 
-    initDataTable('.table-tickets-single', admin_url + 'tickets/index/false/' + customer_id, undefined, undefined, 'undefined', [$('table thead .ticket_created_column').index(), 'desc']);
+        initDataTable('.table-tickets-single', admin_url + 'tickets/index/false/' + customer_id, undefined, undefined, 'undefined', [$('table thead .ticket_created_column').index(), 'desc']);
 
-    /* Customer profile contracts table */
-    initDataTable('.table-contracts-single-client', admin_url + 'contracts/table/' + customer_id, undefined,undefined, 'undefined', [6, 'desc']);
+        /* Customer profile contracts table */
+        initDataTable('.table-contracts-single-client', admin_url + 'contracts/table/' + customer_id, undefined, undefined, 'undefined', [6, 'desc']);
 
-    /* Custome profile contacts table */
-    var contactsNotSortable = [];
-    <?php if(is_gdpr() && get_option('gdpr_enable_consent_for_contacts') == '1'){ ?>
+        /* Custome profile contacts table */
+        var contactsNotSortable = [];
+        <?php if(is_gdpr() && get_option('gdpr_enable_consent_for_contacts') == '1'){ ?>
         contactsNotSortable.push($('#th-consent').index());
-    <?php } ?>
-    _table_api = initDataTable('.table-contacts', admin_url + 'clients/contacts/' + customer_id, contactsNotSortable, contactsNotSortable);
-    if(_table_api) {
-          <?php if(is_gdpr() && get_option('gdpr_enable_consent_for_contacts') == '1'){ ?>
-        _table_api.on('draw', function () {
-            var tableData = $('.table-contacts').find('tbody tr');
-            $.each(tableData, function() {
-                $(this).find('td:eq(1)').addClass('bg-light-gray');
-            });
-        });
-        <?php } ?>
-    }
-    /* Customer profile invoices table */
-    initDataTable('.table-invoices-single-client',
-        admin_url + 'invoices/table/' + customer_id,
-        'undefined',
-        'undefined',
-        'undefined', [
-            [3, 'desc'],
-            [0, 'desc']
-        ]);
+        <?php } ?>
+        _table_api = initDataTable('.table-contacts', admin_url + 'clients/contacts/' + customer_id, contactsNotSortable, contactsNotSortable);
+        if (_table_api) {
+            <?php if(is_gdpr() && get_option('gdpr_enable_consent_for_contacts') == '1'){ ?>
+            _table_api.on('draw', function () {
+                var tableData = $('.table-contacts').find('tbody tr');
+                $.each(tableData, function () {
+                    $(this).find('td:eq(1)').addClass('bg-light-gray');
+                });
+            });
+            <?php } ?>
+        }
+        /* Customer profile invoices table */
+        initDataTable('.table-invoices-single-client',
+            admin_url + 'invoices/table/' + customer_id,
+            'undefined',
+            'undefined',
+            'undefined', [
+                [3, 'desc'],
+                [0, 'desc']
+            ]);
 
-   initDataTable('.table-credit-notes', admin_url+'credit_notes/table/'+customer_id, ['undefined'], ['undefined'], undefined, [0, 'desc']);
+        initDataTable('.table-credit-notes', admin_url + 'credit_notes/table/' + customer_id, ['undefined'], ['undefined'], undefined, [0, 'desc']);
 
-    /* Customer profile Estimates table */
-    initDataTable('.table-estimates-single-client',
-        admin_url + 'estimates/table/' + customer_id,
-        'undefined',
-        'undefined',
-        'undefined', [
-            [3, 'desc'],
-            [0, 'desc']
-        ]);
+        /* Customer profile Estimates table */
+        initDataTable('.table-estimates-single-client',
+            admin_url + 'estimates/table/' + customer_id,
+            'undefined',
+            'undefined',
+            'undefined', [
+                [3, 'desc'],
+                [0, 'desc']
+            ]);
 
-    /* Customer profile payments table */
-    initDataTable('.table-payments-single-client',
-        admin_url + 'payments/table/' + customer_id, undefined, undefined,
-        'undefined', [0, 'desc']);
+        /* Customer profile payments table */
+        initDataTable('.table-payments-single-client',
+            admin_url + 'payments/table/' + customer_id, undefined, undefined,
+            'undefined', [0, 'desc']);
 
-    /* Customer profile reminders table */
-    initDataTable('.table-reminders', admin_url + 'misc/get_reminders/' + customer_id + '/' + 'customer', undefined, undefined, undefined, [1, 'asc']);
+        /* Customer profile reminders table */
+        initDataTable('.table-reminders', admin_url + 'misc/get_reminders/' + customer_id + '/' + 'customer', undefined, undefined, undefined, [1, 'asc']);
 
-    /* Customer profile expenses table */
-    initDataTable('.table-expenses-single-client',
-        admin_url + 'expenses/table/' + customer_id,
-        'undefined',
-        'undefined',
-        'undefined', [5, 'desc']);
+        /* Customer profile expenses table */
+        initDataTable('.table-expenses-single-client',
+            admin_url + 'expenses/table/' + customer_id,
+            'undefined',
+            'undefined',
+            'undefined', [5, 'desc']);
 
-    /* Customer profile proposals table */
-    initDataTable('.table-proposals-client-profile',
-        admin_url + 'proposals/proposal_relations/' + customer_id + '/customer',
-        'undefined',
-        'undefined',
-        'undefined', [6, 'desc']);
+        /* Customer profile proposals table */
+        initDataTable('.table-proposals-client-profile',
+            admin_url + 'proposals/proposal_relations/' + customer_id + '/customer',
+            'undefined',
+            'undefined',
+            'undefined', [6, 'desc']);
 
-    /* Custome profile projects table */
-    initDataTable('.table-projects-single-client', admin_url + 'projects/table/' + customer_id, undefined, undefined, 'undefined', <?php echo hooks()->apply_filters('projects_table_default_order', json_encode(array(5,'asc'))); ?>);
+        /* Custome profile projects table */
+        initDataTable('.table-projects-single-client', admin_url + 'projects/table/' + customer_id, undefined, undefined, 'undefined', <?php echo hooks()->apply_filters('projects_table_default_order', json_encode(array(5, 'asc'))); ?>);
 
-    var vRules = {};
-    if (app.options.company_is_required == 1) {
-        vRules = {
-            company: 'required',
-        }
-    }
 
-    appValidateForm($('.client-form'), vRules);
-
-    if(typeof(customer_id) == 'undefined'){
-        $('#company').on('blur', function() {
-            var company = $(this).val();
-            var $companyExistsDiv = $('#company_exists_info');
+        // Validate # client-form
+        init_validate_client_form();
+        if (typeof (customer_id) == 'undefined') {
+            $('#company').on('blur', function () {
+                var company = $(this).val();
+                var $companyExistsDiv = $('#company_exists_info');
 
-            if(company == '') {
-                $companyExistsDiv.addClass('hide');
-                return;
-            }
+                if (company == '') {
+                    $companyExistsDiv.addClass('hide');
+                    return;
+                }
 
-            $.post(admin_url+'clients/check_duplicate_customer_name', {company:company})
-            .done(function(response) {
-                if(response) {
-                    response = JSON.parse(response);
-                    if(response.exists == true) {
-                        $companyExistsDiv.removeClass('hide');
-                        $companyExistsDiv.html('<div class="info-block mbot15">'+response.message+'</div>');
-                    } else {
-                        $companyExistsDiv.addClass('hide');
-                    }
-                }
-            });
-        });
-    }
+                $.post(admin_url + 'clients/check_duplicate_customer_name', {company: company})
+                    .done(function (response) {
+                        if (response) {
+                            response = JSON.parse(response);
+                            if (response.exists == true) {
+                                $companyExistsDiv.removeClass('hide');
+                                $companyExistsDiv.html('<div class="info-block mbot15">' + response.message + '</div>');
+                            } else {
+                                $companyExistsDiv.addClass('hide');
+                            }
+                        }
+                    });
+            });
+        }
 
-    $('.billing-same-as-customer').on('click', function(e) {
-        e.preventDefault();
-        $('textarea[name="billing_street"]').val($('textarea[name="address"]').val());
-        $('input[name="billing_city"]').val($('input[name="city"]').val());
-        $('input[name="billing_state"]').val($('input[name="state"]').val());
-        $('input[name="billing_zip"]').val($('input[name="zip"]').val());
-        $('select[name="billing_country"]').selectpicker('val', $('select[name="country"]').selectpicker('val'));
-    });
+        $('.billing-same-as-customer').on('click', function (e) {
+            e.preventDefault();
+            $('textarea[name="billing_street"]').val($('textarea[name="address"]').val());
+            $('input[name="billing_city"]').val($('input[name="city"]').val());
+            $('input[name="billing_state"]').val($('input[name="state"]').val());
+            $('input[name="billing_zip"]').val($('input[name="zip"]').val());
+            $('select[name="billing_country"]').selectpicker('val', $('select[name="country"]').selectpicker('val'));
+        });
 
-    $('.customer-copy-billing-address').on('click', function(e) {
-        e.preventDefault();
-        $('textarea[name="shipping_street"]').val($('textarea[name="billing_street"]').val());
-        $('input[name="shipping_city"]').val($('input[name="billing_city"]').val());
-        $('input[name="shipping_state"]').val($('input[name="billing_state"]').val());
-        $('input[name="shipping_zip"]').val($('input[name="billing_zip"]').val());
-        $('select[name="shipping_country"]').selectpicker('val', $('select[name="billing_country"]').selectpicker('val'));
-    });
+        $('.customer-copy-billing-address').on('click', function (e) {
+            e.preventDefault();
+            $('textarea[name="shipping_street"]').val($('textarea[name="billing_street"]').val());
+            $('input[name="shipping_city"]').val($('input[name="billing_city"]').val());
+            $('input[name="shipping_state"]').val($('input[name="billing_state"]').val());
+            $('input[name="shipping_zip"]').val($('input[name="billing_zip"]').val());
+            $('select[name="shipping_country"]').selectpicker('val', $('select[name="billing_country"]').selectpicker('val'));
+        });
 
-    $('body').on('hidden.bs.modal', '#contact', function() {
-        $('#contact_data').empty();
-    });
+        $('body').on('hidden.bs.modal', '#contact', function () {
+            $('#contact_data').empty();
+        });
 
-    $('.client-form').on('submit', function() {
-        $('select[name="default_currency"]').prop('disabled', false);
-    });
+        $('.client-form').on('submit', function () {
+            $('select[name="default_currency"]').prop('disabled', false);
+        });
 
-});
+    });
 
-function delete_contact_profile_image(contact_id) {
-    requestGet('clients/delete_contact_profile_image/'+contact_id).done(function(){
-        $('body').find('#contact-profile-image').removeClass('hide');
-        $('body').find('#contact-remove-img').addClass('hide');
-        $('body').find('#contact-img').attr('src', '<?php echo base_url('assets/images/user-placeholder.jpg'); ?>');
-    });
-}
+    function delete_contact_profile_image(contact_id) {
+        requestGet('clients/delete_contact_profile_image/' + contact_id).done(function () {
+            $('body').find('#contact-profile-image').removeClass('hide');
+            $('body').find('#contact-remove-img').addClass('hide');
+            $('body').find('#contact-img').attr('src', '<?php echo base_url('assets/images/user-placeholder.jpg'); ?>');
+        });
+    }
 
-function customerGoogleDriveSave(pickData) {
-    saveCustomerProfileExternalFile(pickData, 'gdrive');
-}
+    function customerGoogleDriveSave(pickData) {
+        saveCustomerProfileExternalFile(pickData, 'gdrive');
+    }
 
-function saveCustomerProfileExternalFile(files, externalType) {
-    $.post(admin_url + 'clients/add_external_attachment', {
-        files: files,
-        clientid: customer_id,
-        external: externalType
-    }).done(function() {
-        window.location.reload();
-    });
-}
+    function saveCustomerProfileExternalFile(files, externalType) {
+        $.post(admin_url + 'clients/add_external_attachment', {
+            files: files,
+            clientid: customer_id,
+            external: externalType
+        }).done(function () {
+            window.location.reload();
+        });
+    }
 
-function validate_contact_form() {
-    appValidateForm('#contact-form', {
-        firstname: 'required',
-        lastname: 'required',
-        password: {
-            required: {
-                depends: function(element) {
+    function init_validate_client_form() {
+        var rule_client_form = {
+            firstname: 'required',
+            lastname: 'required',
+            password: 'required',
+            email: {
+                <?php if(hooks()->apply_filters('contact_email_required', "true") === "true"){ ?>
+                required: true,
+                <?php } ?>
+                email: true,
+                // Use this hook only if the contacts are not logging into the customers area and you are not using support tickets piping.
+                <?php if(hooks()->apply_filters('contact_email_unique', "true") === "true"){ ?>
+                remote: {
+                    url: admin_url + "misc/contact_email_exists",
+                    type: 'post',
+                    data: {
+                        email: function () {
+                            return $('#email').val();
+                        }
+                    }
+                }
+                <?php } ?>
+            }
+        }
+        if (app.options.company_is_required == 1) {
+            rule_client_form.company = 'required'
+        }
+
+        appValidateForm('#client-form', rule_client_form);
+    }
+
+    function validate_contact_form() {
+        appValidateForm('#contact-form', {
+            firstname: 'required',
+            lastname: 'required',
+            password: {
+                required: {
+                    depends: function (element) {
 
-                    var $sentSetPassword = $('input[name="send_set_password_email"]');
+                        var $sentSetPassword = $('input[name="send_set_password_email"]');
 
-                    if ($('#contact input[name="contactid"]').val() == '' && $sentSetPassword.prop('checked') == false) {
-                        return true;
-                    }
-                }
-            }
-        },
-        email: {
-            <?php if(hooks()->apply_filters('contact_email_required', "true") === "true"){ ?>
-            required: true,
-            <?php } ?>
-            email: true,
-            // Use this hook only if the contacts are not logging into the customers area and you are not using support tickets piping.
-            <?php if(hooks()->apply_filters('contact_email_unique', "true") === "true"){ ?>
-            remote: {
-                url: admin_url + "misc/contact_email_exists",
-                type: 'post',
-                data: {
-                    email: function() {
-                        return $('#contact input[name="email"]').val();
-                    },
-                    userid: function() {
-                        return $('body').find('input[name="contactid"]').val();
-                    }
-                }
-            }
-            <?php } ?>
-        }
-    }, contactFormHandler);
-}
+                        if ($('#contact input[name="contactid"]').val() == '' && $sentSetPassword.prop('checked') == false) {
+                            return true;
+                        }
+                    }
+                }
+            },
+            email: {
+                <?php if(hooks()->apply_filters('contact_email_required', "true") === "true"){ ?>
+                required: true,
+                <?php } ?>
+                email: true,
+                // Use this hook only if the contacts are not logging into the customers area and you are not using support tickets piping.
+                <?php if(hooks()->apply_filters('contact_email_unique', "true") === "true"){ ?>
+                remote: {
+                    url: admin_url + "misc/contact_email_exists",
+                    type: 'post',
+                    data: {
+                        email: function () {
+                            return $('#contact input[name="email"]').val();
+                        },
+                        userid: function () {
+                            return $('body').find('input[name="contactid"]').val();
+                        }
+                    }
+                }
+                <?php } ?>
+            }
+        }, contactFormHandler);
+    }
 
-function contactFormHandler(form) {
-    $('#contact input[name="is_primary"]').prop('disabled', false);
+    function contactFormHandler(form) {
+        $('#contact input[name="is_primary"]').prop('disabled', false);
 
-    $("#contact input[type=file]").each(function() {
-        if($(this).val() === "") {
-            $(this).prop('disabled', true);
-        }
-    });
+        $("#contact input[type=file]").each(function () {
+            if ($(this).val() === "") {
+                $(this).prop('disabled', true);
+            }
+        });
 
-    var formURL = $(form).attr("action");
-    var formData = new FormData($(form)[0]);
+        var formURL = $(form).attr("action");
+        var formData = new FormData($(form)[0]);
 
-    $.ajax({
-        type: 'POST',
-        data: formData,
-        mimeType: "multipart/form-data",
-        contentType: false,
-        cache: false,
-        processData: false,
-        url: formURL
-    }).done(function(response){
-           response = JSON.parse(response);
+        $.ajax({
+            type: 'POST',
+            data: formData,
+            mimeType: "multipart/form-data",
+            contentType: false,
+            cache: false,
+            processData: false,
+            url: formURL
+        }).done(function (response) {
+            response = JSON.parse(response);
             if (response.success) {
                 alert_float('success', response.message);
-                if(typeof(response.is_individual) != 'undefined' && response.is_individual) {
+                if (typeof (response.is_individual) != 'undefined' && response.is_individual) {
                     $('.new-contact').addClass('disabled');
-                    if(!$('.new-contact-wrapper')[0].hasAttribute('data-toggle')) {
-                        $('.new-contact-wrapper').attr('data-toggle','tooltip');
+                    if (!$('.new-contact-wrapper')[0].hasAttribute('data-toggle')) {
+                        $('.new-contact-wrapper').attr('data-toggle', 'tooltip');
                     }
                 }
             }
 
             if ($.fn.DataTable.isDataTable('.table-contacts')) {
-                $('.table-contacts').DataTable().ajax.reload(null,false);
+                $('.table-contacts').DataTable().ajax.reload(null, false);
             } else if ($.fn.DataTable.isDataTable('.table-all-contacts')) {
-                $('.table-all-contacts').DataTable().ajax.reload(null,false);
+                $('.table-all-contacts').DataTable().ajax.reload(null, false);
             }
 
             if (response.proposal_warning && response.proposal_warning != false) {
@@ -339,111 +363,111 @@
             } else {
                 $('#contact').modal('hide');
             }
-    }).fail(function(error){
-        alert_float('danger', JSON.parse(error.responseText));
-    });
-    return false;
-}
+        }).fail(function (error) {
+            alert_float('danger', JSON.parse(error.responseText));
+        });
+        return false;
+    }
 
-function contact(client_id, contact_id) {
-    if (typeof(contact_id) == 'undefined') {
-        contact_id = '';
-    }
-    requestGet('clients/form_contact/' + client_id + '/' + contact_id).done(function(response) {
-        $('#contact_data').html(response);
-        $('#contact').modal({
-            show: true,
-            backdrop: 'static'
-        });
-        $('body').off('shown.bs.modal','#contact');
-        $('body').on('shown.bs.modal', '#contact', function() {
-            if (contact_id == '') {
-                $('#contact').find('input[name="firstname"]').focus();
-            }
-        });
-        init_selectpicker();
-        init_datepicker();
-        custom_fields_hyperlink();
-        validate_contact_form();
-    }).fail(function(error) {
-        var response = JSON.parse(error.responseText);
-        alert_float('danger', response.message);
-    });
-}
+    function contact(client_id, contact_id) {
+        if (typeof (contact_id) == 'undefined') {
+            contact_id = '';
+        }
+        requestGet('clients/form_contact/' + client_id + '/' + contact_id).done(function (response) {
+            $('#contact_data').html(response);
+            $('#contact').modal({
+                show: true,
+                backdrop: 'static'
+            });
+            $('body').off('shown.bs.modal', '#contact');
+            $('body').on('shown.bs.modal', '#contact', function () {
+                if (contact_id == '') {
+                    $('#contact').find('input[name="firstname"]').focus();
+                }
+            });
+            init_selectpicker();
+            init_datepicker();
+            custom_fields_hyperlink();
+            validate_contact_form();
+        }).fail(function (error) {
+            var response = JSON.parse(error.responseText);
+            alert_float('danger', response.message);
+        });
+    }
 
 
-function update_all_proposal_emails_linked_to_contact(contact_id) {
-    var data = {};
-    data.update = true;
-    data.original_email = $('body').find('#contact_update_proposals_emails').data('original-email');
-    $.post(admin_url + 'clients/update_all_proposal_emails_linked_to_customer/' + contact_id, data).done(function(response) {
-        response = JSON.parse(response);
-        if (response.success) {
-            alert_float('success', response.message);
-        }
-        $('#contact').modal('hide');
-    });
-}
+    function update_all_proposal_emails_linked_to_contact(contact_id) {
+        var data = {};
+        data.update = true;
+        data.original_email = $('body').find('#contact_update_proposals_emails').data('original-email');
+        $.post(admin_url + 'clients/update_all_proposal_emails_linked_to_customer/' + contact_id, data).done(function (response) {
+            response = JSON.parse(response);
+            if (response.success) {
+                alert_float('success', response.message);
+            }
+            $('#contact').modal('hide');
+        });
+    }
 
-function do_share_file_contacts(edit_contacts, file_id) {
-    var contacts_shared_ids = $('select[name="share_contacts_id[]"]');
-    if (typeof(edit_contacts) == 'undefined' && typeof(file_id) == 'undefined') {
-        var contacts_shared_ids_selected = $('select[name="share_contacts_id[]"]').val();
-    } else {
-        var _temp = edit_contacts.toString().split(',');
-        for (var cshare_id in _temp) {
-            contacts_shared_ids.find('option[value="' + _temp[cshare_id] + '"]').attr('selected', true);
-        }
-        contacts_shared_ids.selectpicker('refresh');
-        $('input[name="file_id"]').val(file_id);
-        $('#customer_file_share_file_with').modal('show');
-        return;
-    }
-    var file_id = $('input[name="file_id"]').val();
-    $.post(admin_url + 'clients/update_file_share_visibility', {
-        file_id: file_id,
-        share_contacts_id: contacts_shared_ids_selected,
-        customer_id: $('input[name="userid"]').val()
-    }).done(function() {
-        window.location.reload();
-    });
-}
+    function do_share_file_contacts(edit_contacts, file_id) {
+        var contacts_shared_ids = $('select[name="share_contacts_id[]"]');
+        if (typeof (edit_contacts) == 'undefined' && typeof (file_id) == 'undefined') {
+            var contacts_shared_ids_selected = $('select[name="share_contacts_id[]"]').val();
+        } else {
+            var _temp = edit_contacts.toString().split(',');
+            for (var cshare_id in _temp) {
+                contacts_shared_ids.find('option[value="' + _temp[cshare_id] + '"]').attr('selected', true);
+            }
+            contacts_shared_ids.selectpicker('refresh');
+            $('input[name="file_id"]').val(file_id);
+            $('#customer_file_share_file_with').modal('show');
+            return;
+        }
+        var file_id = $('input[name="file_id"]').val();
+        $.post(admin_url + 'clients/update_file_share_visibility', {
+            file_id: file_id,
+            share_contacts_id: contacts_shared_ids_selected,
+            customer_id: $('input[name="userid"]').val()
+        }).done(function () {
+            window.location.reload();
+        });
+    }
 
-function save_longitude_and_latitude(clientid) {
-    var data = {};
-    data.latitude = $('#latitude').val();
-    data.longitude = $('#longitude').val();
-    $.post(admin_url + 'clients/save_longitude_and_latitude/'+clientid, data).done(function(response) {
-       if(response == 'success') {
-            alert_float('success', "<?php echo _l('updated_successfully', _l('client')); ?>");
-       }
-        setTimeout(function(){
-            window.location.reload();
-        },1200);
-    }).fail(function(error) {
-        alert_float('danger', error.responseText);
-    });
-}
+    function save_longitude_and_latitude(clientid) {
+        var data = {};
+        data.latitude = $('#latitude').val();
+        data.longitude = $('#longitude').val();
+        $.post(admin_url + 'clients/save_longitude_and_latitude/' + clientid, data).done(function (response) {
+            if (response == 'success') {
+                alert_float('success', "<?php echo _l('updated_successfully', _l('client')); ?>");
+            }
+            setTimeout(function () {
+                window.location.reload();
+            }, 1200);
+        }).fail(function (error) {
+            alert_float('danger', error.responseText);
+        });
+    }
 
-function fetch_lat_long_from_google_cprofile() {
-    var data = {};
-    data.address = $('#long_lat_wrapper').data('address');
-    data.city = $('#long_lat_wrapper').data('city');
-    data.country = $('#long_lat_wrapper').data('country');
-    $('#gmaps-search-icon').removeClass('fa-google').addClass('fa-spinner fa-spin');
-    $.post(admin_url + 'misc/fetch_address_info_gmaps', data).done(function(data) {
-        data = JSON.parse(data);
-        $('#gmaps-search-icon').removeClass('fa-spinner fa-spin').addClass('fa-google');
-        if (data.response.status == 'OK') {
-            $('input[name="latitude"]').val(data.lat);
-            $('input[name="longitude"]').val(data.lng);
-        } else {
-            if (data.response.status == 'ZERO_RESULTS') {
-                alert_float('warning', "<?php echo _l('g_search_address_not_found'); ?>");
-            } else {
-                alert_float('danger', data.response.status + ' - ' + data.response.error_message);
-            }
-        }
-    });
-}
+    function fetch_lat_long_from_google_cprofile() {
+        var data = {};
+        data.address = $('#long_lat_wrapper').data('address');
+        data.city = $('#long_lat_wrapper').data('city');
+        data.country = $('#long_lat_wrapper').data('country');
+        $('#gmaps-search-icon').removeClass('fa-google').addClass('fa-spinner fa-spin');
+        $.post(admin_url + 'misc/fetch_address_info_gmaps', data).done(function (data) {
+            data = JSON.parse(data);
+            $('#gmaps-search-icon').removeClass('fa-spinner fa-spin').addClass('fa-google');
+            if (data.response.status == 'OK') {
+                $('input[name="latitude"]').val(data.lat);
+                $('input[name="longitude"]').val(data.lng);
+            } else {
+                if (data.response.status == 'ZERO_RESULTS') {
+                    alert_float('warning', "<?php echo _l('g_search_address_not_found'); ?>");
+                } else {
+                    alert_float('danger', data.response.status + ' - ' + data.response.error_message);
+                }
+            }
+        });
+    }
 </script>
Index: application/views/admin/clients/groups/profile.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- application/views/admin/clients/groups/profile.php	(revision 39ef2a10e3086e89f45fdff68bbabd525aed4e05)
+++ application/views/admin/clients/groups/profile.php	(revision 9e714bebf4297525013326e675f189303771f5f7)
@@ -1,283 +1,355 @@
 <?php defined('BASEPATH') or exit('No direct script access allowed'); ?>
 <h4 class="customer-profile-group-heading"><?php echo _l('client_add_edit_profile'); ?></h4>
 <div class="row">
-   <?php echo form_open($this->uri->uri_string(),array('class'=>'client-form','autocomplete'=>'off')); ?>
-   <div class="additional"></div>
-   <div class="col-md-12">
-      <div class="horizontal-scrollable-tabs">
-         <div class="scroller arrow-left"><i class="fa fa-angle-left"></i></div>
-         <div class="scroller arrow-right"><i class="fa fa-angle-right"></i></div>
-         <div class="horizontal-tabs">
-            <ul class="nav nav-tabs profile-tabs row customer-profile-tabs nav-tabs-horizontal" role="tablist">
-               <li role="presentation" class="<?php if(!$this->input->get('tab')){echo 'active';}; ?>">
-                  <a href="#contact_info" aria-controls="contact_info" role="tab" data-toggle="tab">
-                  <?php echo _l( 'customer_profile_details'); ?>
-                  </a>
-               </li>
-               <?php
-                  $customer_custom_fields = false;
-                  if(total_rows(db_prefix().'customfields',array('fieldto'=>'customers','active'=>1)) > 0 ){
-                       $customer_custom_fields = true;
-                   ?>
-               <li role="presentation" class="<?php if($this->input->get('tab') == 'custom_fields'){echo 'active';}; ?>">
-                  <a href="#custom_fields" aria-controls="custom_fields" role="tab" data-toggle="tab">
-                  <?php echo hooks()->apply_filters('customer_profile_tab_custom_fields_text', _l( 'custom_fields')); ?>
-                  </a>
-               </li>
-               <?php } ?>
-               <li role="presentation">
-                  <a href="#billing_and_shipping" aria-controls="billing_and_shipping" role="tab" data-toggle="tab">
-                  <?php echo _l( 'billing_shipping'); ?>
-                  </a>
-               </li>
-               <?php hooks()->do_action('after_customer_billing_and_shipping_tab', isset($client) ? $client : false); ?>
-               <?php if(isset($client)){ ?>
-               <li role="presentation">
-                  <a href="#customer_admins" aria-controls="customer_admins" role="tab" data-toggle="tab">
-                  <?php echo _l( 'customer_admins' ); ?>
-                  </a>
-               </li>
-               <?php hooks()->do_action('after_customer_admins_tab',$client); ?>
-               <?php } ?>
-            </ul>
-         </div>
-      </div>
-      <div class="tab-content mtop15">
-         <?php hooks()->do_action('after_custom_profile_tab_content',isset($client) ? $client : false); ?>
-         <?php if($customer_custom_fields) { ?>
-         <div role="tabpanel" class="tab-pane <?php if($this->input->get('tab') == 'custom_fields'){echo ' active';}; ?>" id="custom_fields">
-            <?php $rel_id=( isset($client) ? $client->userid : false); ?>
-            <?php echo render_custom_fields( 'customers',$rel_id); ?>
-         </div>
-         <?php } ?>
-         <div role="tabpanel" class="tab-pane<?php if(!$this->input->get('tab')){echo ' active';}; ?>" id="contact_info">
-            <div class="row">
-               <div class="col-md-12 mtop15 <?php if(isset($client) && (!is_empty_customer_company($client->userid) && total_rows(db_prefix().'contacts',array('userid'=>$client->userid,'is_primary'=>1)) > 0)) { echo ''; } else {echo ' hide';} ?>" id="client-show-primary-contact-wrapper">
-                  <div class="checkbox checkbox-info mbot20 no-mtop">
-                     <input type="checkbox" name="show_primary_contact"<?php if(isset($client) && $client->show_primary_contact == 1){echo ' checked';}?> value="1" id="show_primary_contact">
-                     <label for="show_primary_contact"><?php echo _l('show_primary_contact',_l('invoices').', '._l('estimates').', '._l('payments').', '._l('credit_notes')); ?></label>
-                  </div>
-               </div>
-               <div class="col-md-6">
-                  <?php $value=( isset($client) ? $client->company : ''); ?>
-                  <?php $attrs = (isset($client) ? array() : array('autofocus'=>true)); ?>
-                  <?php echo render_input( 'company', 'client_company',$value,'text',$attrs); ?>
-                  <div id="company_exists_info" class="hide"></div>
-                  <?php if(get_option('company_requires_vat_number_field') == 1){
-                     $value=( isset($client) ? $client->vat : '');
-                     echo render_input( 'vat', 'client_vat_number',$value);
-                     } ?>
-                  <?php $value=( isset($client) ? $client->phonenumber : ''); ?>
-                  <?php echo render_input( 'phonenumber', 'client_phonenumber',$value); ?>
-                  <?php if((isset($client) && empty($client->website)) || !isset($client)){
-                     $value=( isset($client) ? $client->website : '');
-                     echo render_input( 'website', 'client_website',$value);
-                     } else { ?>
-                  <div class="form-group">
-                     <label for="website"><?php echo _l('client_website'); ?></label>
-                     <div class="input-group">
-                        <input type="text" name="website" id="website" value="<?php echo $client->website; ?>" class="form-control">
-                        <div class="input-group-addon">
-                           <span><a href="<?php echo maybe_add_http($client->website); ?>" target="_blank" tabindex="-1"><i class="fa fa-globe"></i></a></span>
-                        </div>
-                     </div>
-                  </div>
-                  <?php }
-                     $selected = array();
-                     if(isset($customer_groups)){
-                       foreach($customer_groups as $group){
-                          array_push($selected,$group['groupid']);
-                       }
-                     }
-                     if(is_admin() || get_option('staff_members_create_inline_customer_groups') == '1'){
-                      echo render_select_with_input_group('groups_in[]',$groups,array('id','name'),'customer_groups',$selected,'<a href="#" data-toggle="modal" data-target="#customer_group_modal"><i class="fa fa-plus"></i></a>',array('multiple'=>true,'data-actions-box'=>true),array(),'','',false);
-                      } else {
-                        echo render_select('groups_in[]',$groups,array('id','name'),'customer_groups',$selected,array('multiple'=>true,'data-actions-box'=>true),array(),'','',false);
-                      }
-                     ?>
-                  <?php if(!isset($client)){ ?>
-                  <i class="fa fa-question-circle pull-left" data-toggle="tooltip" data-title="<?php echo _l('customer_currency_change_notice'); ?>"></i>
-                  <?php }
-                     $s_attrs = array('data-none-selected-text'=>_l('system_default_string'));
-                     $selected = '';
-                     if(isset($client) && client_have_transactions($client->userid)){
-                        $s_attrs['disabled'] = true;
-                     }
-                     foreach($currencies as $currency){
-                        if(isset($client)){
-                          if($currency['id'] == $client->default_currency){
-                            $selected = $currency['id'];
-                         }
-                      }
-                     }
-                            // Do not remove the currency field from the customer profile!
-                     echo render_select('default_currency',$currencies,array('id','name','symbol'),'invoice_add_edit_currency',$selected,$s_attrs); ?>
-                  <?php if(!is_language_disabled()){ ?>
-                  <div class="form-group select-placeholder">
-                     <label for="default_language" class="control-label"><?php echo _l('localization_default_language'); ?>
-                     </label>
-                     <select name="default_language" id="default_language" class="form-control selectpicker" data-none-selected-text="<?php echo _l('dropdown_non_selected_tex'); ?>">
-                        <option value=""><?php echo _l('system_default_string'); ?></option>
-                        <?php foreach($this->app->get_available_languages() as $availableLanguage){
-                           $selected = '';
-                           if(isset($client)){
-                              if($client->default_language == $availableLanguage){
-                                 $selected = 'selected';
-                              }
-                           }
-                           ?>
-                        <option value="<?php echo $availableLanguage; ?>" <?php echo $selected; ?>><?php echo ucfirst($availableLanguage); ?></option>
-                        <?php } ?>
-                     </select>
-                  </div>
-                  <?php } ?>
-               </div>
-               <div class="col-md-6">
-                  <?php $value=( isset($client) ? $client->address : ''); ?>
-                  <?php echo render_textarea( 'address', 'client_address',$value); ?>
-                  <?php $value=( isset($client) ? $client->city : ''); ?>
-                  <?php echo render_input( 'city', 'client_city',$value); ?>
-                  <?php $value=( isset($client) ? $client->state : ''); ?>
-                  <?php echo render_input( 'state', 'client_state',$value); ?>
-                  <?php $value=( isset($client) ? $client->zip : ''); ?>
-                  <?php echo render_input( 'zip', 'client_postal_code',$value); ?>
-                  <?php $countries= get_all_countries();
-                     $customer_default_country = get_option('customer_default_country');
-                     $selected =( isset($client) ? $client->country : $customer_default_country);
-                     echo render_select( 'country',$countries,array( 'country_id',array( 'short_name')), 'clients_country',$selected,array('data-none-selected-text'=>_l('dropdown_non_selected_tex')));
-                     ?>
-               </div>
-            </div>
-         </div>
-         <?php if(isset($client)){ ?>
-         <div role="tabpanel" class="tab-pane" id="customer_admins">
-            <?php if (has_permission('customers', '', 'create') || has_permission('customers', '', 'edit')) { ?>
-            <a href="#" data-toggle="modal" data-target="#customer_admins_assign" class="btn btn-info mbot30"><?php echo _l('assign_admin'); ?></a>
-            <?php } ?>
-            <table class="table dt-table">
-               <thead>
-                  <tr>
-                     <th><?php echo _l('staff_member'); ?></th>
-                     <th><?php echo _l('customer_admin_date_assigned'); ?></th>
-                     <?php if(has_permission('customers','','create') || has_permission('customers','','edit')){ ?>
-                     <th><?php echo _l('options'); ?></th>
-                     <?php } ?>
-                  </tr>
-               </thead>
-               <tbody>
-                  <?php foreach($customer_admins as $c_admin){ ?>
-                  <tr>
-                     <td><a href="<?php echo admin_url('profile/'.$c_admin['staff_id']); ?>">
-                        <?php echo staff_profile_image($c_admin['staff_id'], array(
-                           'staff-profile-image-small',
-                           'mright5'
-                           ));
-                           echo get_staff_full_name($c_admin['staff_id']); ?></a>
-                     </td>
-                     <td data-order="<?php echo $c_admin['date_assigned']; ?>"><?php echo _dt($c_admin['date_assigned']); ?></td>
-                     <?php if(has_permission('customers','','create') || has_permission('customers','','edit')){ ?>
-                     <td>
-                        <a href="<?php echo admin_url('clients/delete_customer_admin/'.$client->userid.'/'.$c_admin['staff_id']); ?>" class="btn btn-danger _delete btn-icon"><i class="fa fa-remove"></i></a>
-                     </td>
-                     <?php } ?>
-                  </tr>
-                  <?php } ?>
-               </tbody>
-            </table>
-         </div>
-         <?php } ?>
-         <div role="tabpanel" class="tab-pane" id="billing_and_shipping">
-            <div class="row">
-               <div class="col-md-12">
-                  <div class="row">
-                     <div class="col-md-6">
-                        <h4 class="no-mtop"><?php echo _l('billing_address'); ?> <a href="#" class="pull-right billing-same-as-customer"><small class="font-medium-xs"><?php echo _l('customer_billing_same_as_profile'); ?></small></a></h4>
-                        <hr />
-                        <?php $value=( isset($client) ? $client->billing_street : ''); ?>
-                        <?php echo render_textarea( 'billing_street', 'billing_street',$value); ?>
-                        <?php $value=( isset($client) ? $client->billing_city : ''); ?>
-                        <?php echo render_input( 'billing_city', 'billing_city',$value); ?>
-                        <?php $value=( isset($client) ? $client->billing_state : ''); ?>
-                        <?php echo render_input( 'billing_state', 'billing_state',$value); ?>
-                        <?php $value=( isset($client) ? $client->billing_zip : ''); ?>
-                        <?php echo render_input( 'billing_zip', 'billing_zip',$value); ?>
-                        <?php $selected=( isset($client) ? $client->billing_country : '' ); ?>
-                        <?php echo render_select( 'billing_country',$countries,array( 'country_id',array( 'short_name')), 'billing_country',$selected,array('data-none-selected-text'=>_l('dropdown_non_selected_tex'))); ?>
-                     </div>
-                     <div class="col-md-6">
-                        <h4 class="no-mtop">
-                           <i class="fa fa-question-circle" data-toggle="tooltip" data-title="<?php echo _l('customer_shipping_address_notice'); ?>"></i>
-                           <?php echo _l('shipping_address'); ?> <a href="#" class="pull-right customer-copy-billing-address"><small class="font-medium-xs"><?php echo _l('customer_billing_copy'); ?></small></a>
-                        </h4>
-                        <hr />
-                        <?php $value=( isset($client) ? $client->shipping_street : ''); ?>
-                        <?php echo render_textarea( 'shipping_street', 'shipping_street',$value); ?>
-                        <?php $value=( isset($client) ? $client->shipping_city : ''); ?>
-                        <?php echo render_input( 'shipping_city', 'shipping_city',$value); ?>
-                        <?php $value=( isset($client) ? $client->shipping_state : ''); ?>
-                        <?php echo render_input( 'shipping_state', 'shipping_state',$value); ?>
-                        <?php $value=( isset($client) ? $client->shipping_zip : ''); ?>
-                        <?php echo render_input( 'shipping_zip', 'shipping_zip',$value); ?>
-                        <?php $selected=( isset($client) ? $client->shipping_country : '' ); ?>
-                        <?php echo render_select( 'shipping_country',$countries,array( 'country_id',array( 'short_name')), 'shipping_country',$selected,array('data-none-selected-text'=>_l('dropdown_non_selected_tex'))); ?>
-                     </div>
-                     <?php if(isset($client) &&
-                        (total_rows(db_prefix().'invoices',array('clientid'=>$client->userid)) > 0 || total_rows(db_prefix().'estimates',array('clientid'=>$client->userid)) > 0 || total_rows(db_prefix().'creditnotes',array('clientid'=>$client->userid)) > 0)){ ?>
-                     <div class="col-md-12">
-                        <div class="alert alert-warning">
-                           <div class="checkbox checkbox-default">
-                              <input type="checkbox" name="update_all_other_transactions" id="update_all_other_transactions">
-                              <label for="update_all_other_transactions">
-                              <?php echo _l('customer_update_address_info_on_invoices'); ?><br />
-                              </label>
-                           </div>
-                           <b><?php echo _l('customer_update_address_info_on_invoices_help'); ?></b>
-                           <div class="checkbox checkbox-default">
-                              <input type="checkbox" name="update_credit_notes" id="update_credit_notes">
-                              <label for="update_credit_notes">
-                              <?php echo _l('customer_profile_update_credit_notes'); ?><br />
-                              </label>
-                           </div>
-                        </div>
-                     </div>
-                     <?php } ?>
-                  </div>
-               </div>
-            </div>
-         </div>
-      </div>
-   </div>
-   <?php echo form_close(); ?>
+    <?php $attributes = array('class' => 'client-form', 'autocomplete' => 'off', 'id' => 'client-form'); ?>
+    <?php echo form_open($this->uri->uri_string(), $attributes); ?>
+    <div class="additional"></div>
+    <div class="col-md-12">
+        <div class="horizontal-scrollable-tabs">
+            <div class="scroller arrow-left"><i class="fa fa-angle-left"></i></div>
+            <div class="scroller arrow-right"><i class="fa fa-angle-right"></i></div>
+            <div class="horizontal-tabs">
+                <ul class="nav nav-tabs profile-tabs row customer-profile-tabs nav-tabs-horizontal" role="tablist">
+                    <li role="presentation" class="<?php if (!$this->input->get('tab')) {
+                        echo 'active';
+                    }; ?>">
+                        <a href="#contact_info" aria-controls="contact_info" role="tab" data-toggle="tab">
+                            <?php echo _l('customer_profile_details'); ?>
+                        </a>
+                    </li>
+                    <?php
+                    $customer_custom_fields = false;
+                    if (total_rows(db_prefix() . 'customfields', array('fieldto' => 'customers', 'active' => 1)) > 0) {
+                        $customer_custom_fields = true;
+                        ?>
+                        <li role="presentation" class="<?php if ($this->input->get('tab') == 'custom_fields') {
+                            echo 'active';
+                        }; ?>">
+                            <a href="#custom_fields" aria-controls="custom_fields" role="tab" data-toggle="tab">
+                                <?php echo hooks()->apply_filters('customer_profile_tab_custom_fields_text', _l('custom_fields')); ?>
+                            </a>
+                        </li>
+                    <?php } ?>
+                    <li role="presentation">
+                        <a href="#billing_and_shipping" aria-controls="billing_and_shipping" role="tab"
+                           data-toggle="tab">
+                            <?php echo _l('billing_shipping'); ?>
+                        </a>
+                    </li>
+                    <?php hooks()->do_action('after_customer_billing_and_shipping_tab', isset($client) ? $client : false); ?>
+                    <?php if (isset($client)) { ?>
+                        <li role="presentation">
+                            <a href="#customer_admins" aria-controls="customer_admins" role="tab" data-toggle="tab">
+                                <?php echo _l('customer_admins'); ?>
+                            </a>
+                        </li>
+                        <?php hooks()->do_action('after_customer_admins_tab', $client); ?>
+                    <?php } ?>
+                </ul>
+            </div>
+        </div>
+        <div class="tab-content mtop15">
+            <?php hooks()->do_action('after_custom_profile_tab_content', isset($client) ? $client : false); ?>
+            <?php if ($customer_custom_fields) { ?>
+                <div role="tabpanel" class="tab-pane <?php if ($this->input->get('tab') == 'custom_fields') {
+                    echo ' active';
+                }; ?>" id="custom_fields">
+                    <?php $rel_id = (isset($client) ? $client->userid : false); ?>
+                    <?php echo render_custom_fields('customers', $rel_id); ?>
+                </div>
+            <?php } ?>
+            <div role="tabpanel" class="tab-pane<?php if (!$this->input->get('tab')) {
+                echo ' active';
+            }; ?>" id="contact_info">
+                <div class="row">
+                    <div class="col-md-12 mtop15 <?php if (isset($client) && (!is_empty_customer_company($client->userid) && total_rows(db_prefix() . 'contacts', array('userid' => $client->userid, 'is_primary' => 1)) > 0)) {
+                        echo '';
+                    } else {
+                        echo ' hide';
+                    } ?>" id="client-show-primary-contact-wrapper">
+                        <div class="checkbox checkbox-info mbot20 no-mtop">
+                            <input type="checkbox"
+                                   name="show_primary_contact"<?php if (isset($client) && $client->show_primary_contact == 1) {
+                                echo ' checked';
+                            } ?> value="1" id="show_primary_contact">
+                            <label for="show_primary_contact"><?php echo _l('show_primary_contact', _l('invoices') . ', ' . _l('estimates') . ', ' . _l('payments') . ', ' . _l('credit_notes')); ?></label>
+                        </div>
+                    </div>
+                    <div class="col-md-4">
+                        <?php $value = (isset($client) ? $client->company : ''); ?>
+                        <?php $attrs = (isset($client) ? array() : array('autofocus' => true)); ?>
+                        <?php echo render_input('company', 'client_company', $value, 'text', $attrs); ?>
+                        <div id="company_exists_info" class="hide"></div>
+                        <?php if (get_option('company_requires_vat_number_field') == 1) {
+                            $value = (isset($client) ? $client->vat : '');
+                            echo render_input('vat', 'client_vat_number', $value);
+                        } ?>
+                        <?php $value = (isset($client) ? $client->phonenumber : ''); ?>
+                        <?php echo render_input('phonenumber', 'client_phonenumber', $value); ?>
+                        <?php if ((isset($client) && empty($client->website)) || !isset($client)) {
+                            $value = (isset($client) ? $client->website : '');
+                            echo render_input('website', 'client_website', $value);
+                        } else { ?>
+                            <div class="form-group">
+                                <label for="website"><?php echo _l('client_website'); ?></label>
+                                <div class="input-group">
+                                    <input type="text" name="website" id="website"
+                                           value="<?php echo $client->website; ?>" class="form-control">
+                                    <div class="input-group-addon">
+                                        <span><a href="<?php echo maybe_add_http($client->website); ?>" target="_blank"
+                                                 tabindex="-1"><i class="fa fa-globe"></i></a></span>
+                                    </div>
+                                </div>
+                            </div>
+                        <?php }
+                        $selected = array();
+                        if (isset($customer_groups)) {
+                            foreach ($customer_groups as $group) {
+                                array_push($selected, $group['groupid']);
+                            }
+                        }
+                        if (is_admin() || get_option('staff_members_create_inline_customer_groups') == '1') {
+                            echo render_select_with_input_group('groups_in[]', $groups, array('id', 'name'), 'customer_groups', $selected, '<a href="#" data-toggle="modal" data-target="#customer_group_modal"><i class="fa fa-plus"></i></a>', array('multiple' => true, 'data-actions-box' => true), array(), '', '', false);
+                        } else {
+                            echo render_select('groups_in[]', $groups, array('id', 'name'), 'customer_groups', $selected, array('multiple' => true, 'data-actions-box' => true), array(), '', '', false);
+                        }
+                        ?>
+                        <?php if (!isset($client)) { ?>
+                            <i class="fa fa-question-circle pull-left" data-toggle="tooltip"
+                               data-title="<?php echo _l('customer_currency_change_notice'); ?>"></i>
+                        <?php }
+                        $s_attrs = array('data-none-selected-text' => _l('system_default_string'));
+                        $selected = '';
+                        if (isset($client) && client_have_transactions($client->userid)) {
+                            $s_attrs['disabled'] = true;
+                        }
+                        foreach ($currencies as $currency) {
+                            if (isset($client)) {
+                                if ($currency['id'] == $client->default_currency) {
+                                    $selected = $currency['id'];
+                                }
+                            }
+                        }
+                        // Do not remove the currency field from the customer profile!
+                        echo render_select('default_currency', $currencies, array('id', 'name', 'symbol'), 'invoice_add_edit_currency', $selected, $s_attrs); ?>
+                        <?php if (!is_language_disabled()) { ?>
+                            <div class="form-group select-placeholder">
+                                <label for="default_language"
+                                       class="control-label"><?php echo _l('localization_default_language'); ?>
+                                </label>
+                                <select name="default_language" id="default_language" class="form-control selectpicker"
+                                        data-none-selected-text="<?php echo _l('dropdown_non_selected_tex'); ?>">
+                                    <option value=""><?php echo _l('system_default_string'); ?></option>
+                                    <?php foreach ($this->app->get_available_languages() as $availableLanguage) {
+                                        $selected = '';
+                                        if (isset($client)) {
+                                            if ($client->default_language == $availableLanguage) {
+                                                $selected = 'selected';
+                                            }
+                                        }
+                                        ?>
+                                        <option value="<?php echo $availableLanguage; ?>" <?php echo $selected; ?>><?php echo ucfirst($availableLanguage); ?></option>
+                                    <?php } ?>
+                                </select>
+                            </div>
+                        <?php } ?>
+                    </div>
+                    <div class="col-md-4">
+                        <?php $value = (isset($contact) ? $contact->firstname : ''); ?>
+                        <?php echo render_input('firstname', 'client_firstname', $value); ?>
+                        <?php $value = (isset($contact) ? $contact->lastname : ''); ?>
+                        <?php echo render_input('lastname', 'client_lastname', $value); ?>
+                        <?php $value = (isset($contact) ? $contact->email : ''); ?>
+                        <?php echo render_input('email', 'client_email', $value, 'email'); ?>
+                        <!-- fake fields are a workaround for chrome autofill getting the wrong fields -->
+                        <input  type="text" class="fake-autofill-field" name="fakeusernameremembered" value='' tabindex="-1" />
+                        <input  type="password" class="fake-autofill-field" name="fakepasswordremembered" value='' tabindex="-1"/>
+
+                        <div class="client_password_set_wrapper">
+                            <label for="password" class="control-label">
+                                <?php echo _l('client_password'); ?>
+                            </label>
+                            <div class="input-group">
+
+                                <input type="password" class="form-control password" name="password"
+                                       autocomplete="false">
+                                <span class="input-group-addon">
+                                <a href="#password" class="show_password"
+                                   onclick="showPassword('password'); return false;"><i class="fa fa-eye"></i></a>
+                            </span>
+                                <span class="input-group-addon">
+                                <a href="#" class="generate_password" onclick="generatePassword(this);return false;"><i
+                                            class="fa fa-refresh"></i></a>
+                            </span>
+                            </div>
+                            <?php if (isset($contact)) { ?>
+                                <p class="text-muted">
+                                    <?php echo _l('client_password_change_populate_note'); ?>
+                                </p>
+                                <?php if ($contact->last_password_change != NULL) {
+                                    echo _l('client_password_last_changed');
+                                    echo '<span class="text-has-action" data-toggle="tooltip" data-title="' . _dt($contact->last_password_change) . '"> ' . time_ago($contact->last_password_change) . '</span>';
+                                }
+                            } ?>
+                        </div>
+                    </div>
+                    <div class="col-md-4">
+                        <?php $value = (isset($client) ? $client->address : ''); ?>
+                        <?php echo render_textarea('address', 'client_address', $value); ?>
+                        <?php $value = (isset($client) ? $client->city : ''); ?>
+                        <?php echo render_input('city', 'client_city', $value); ?>
+                        <?php $value = (isset($client) ? $client->state : ''); ?>
+                        <?php echo render_input('state', 'client_state', $value); ?>
+                        <?php $value = (isset($client) ? $client->zip : ''); ?>
+                        <?php echo render_input('zip', 'client_postal_code', $value); ?>
+                        <?php $countries = get_all_countries();
+                        $customer_default_country = get_option('customer_default_country');
+                        $selected = (isset($client) ? $client->country : $customer_default_country);
+                        echo render_select('country', $countries, array('country_id', array('short_name')), 'clients_country', $selected, array('data-none-selected-text' => _l('dropdown_non_selected_tex')));
+                        ?>
+                    </div>
+                </div>
+            </div>
+            <?php if (isset($client)) { ?>
+                <div role="tabpanel" class="tab-pane" id="customer_admins">
+                    <?php if (has_permission('customers', '', 'create') || has_permission('customers', '', 'edit')) { ?>
+                        <a href="#" data-toggle="modal" data-target="#customer_admins_assign"
+                           class="btn btn-info mbot30"><?php echo _l('assign_admin'); ?></a>
+                    <?php } ?>
+                    <table class="table dt-table">
+                        <thead>
+                        <tr>
+                            <th><?php echo _l('staff_member'); ?></th>
+                            <th><?php echo _l('customer_admin_date_assigned'); ?></th>
+                            <?php if (has_permission('customers', '', 'create') || has_permission('customers', '', 'edit')) { ?>
+                                <th><?php echo _l('options'); ?></th>
+                            <?php } ?>
+                        </tr>
+                        </thead>
+                        <tbody>
+                        <?php foreach ($customer_admins as $c_admin) { ?>
+                            <tr>
+                                <td><a href="<?php echo admin_url('profile/' . $c_admin['staff_id']); ?>">
+                                        <?php echo staff_profile_image($c_admin['staff_id'], array(
+                                            'staff-profile-image-small',
+                                            'mright5'
+                                        ));
+                                        echo get_staff_full_name($c_admin['staff_id']); ?></a>
+                                </td>
+                                <td data-order="<?php echo $c_admin['date_assigned']; ?>"><?php echo _dt($c_admin['date_assigned']); ?></td>
+                                <?php if (has_permission('customers', '', 'create') || has_permission('customers', '', 'edit')) { ?>
+                                    <td>
+                                        <a href="<?php echo admin_url('clients/delete_customer_admin/' . $client->userid . '/' . $c_admin['staff_id']); ?>"
+                                           class="btn btn-danger _delete btn-icon"><i class="fa fa-remove"></i></a>
+                                    </td>
+                                <?php } ?>
+                            </tr>
+                        <?php } ?>
+                        </tbody>
+                    </table>
+                </div>
+            <?php } ?>
+            <div role="tabpanel" class="tab-pane" id="billing_and_shipping">
+                <div class="row">
+                    <div class="col-md-12">
+                        <div class="row">
+                            <div class="col-md-6">
+                                <h4 class="no-mtop"><?php echo _l('billing_address'); ?> <a href="#"
+                                                                                            class="pull-right billing-same-as-customer"><small
+                                                class="font-medium-xs"><?php echo _l('customer_billing_same_as_profile'); ?></small></a>
+                                </h4>
+                                <hr/>
+                                <?php $value = (isset($client) ? $client->billing_street : ''); ?>
+                                <?php echo render_textarea('billing_street', 'billing_street', $value); ?>
+                                <?php $value = (isset($client) ? $client->billing_city : ''); ?>
+                                <?php echo render_input('billing_city', 'billing_city', $value); ?>
+                                <?php $value = (isset($client) ? $client->billing_state : ''); ?>
+                                <?php echo render_input('billing_state', 'billing_state', $value); ?>
+                                <?php $value = (isset($client) ? $client->billing_zip : ''); ?>
+                                <?php echo render_input('billing_zip', 'billing_zip', $value); ?>
+                                <?php $selected = (isset($client) ? $client->billing_country : ''); ?>
+                                <?php echo render_select('billing_country', $countries, array('country_id', array('short_name')), 'billing_country', $selected, array('data-none-selected-text' => _l('dropdown_non_selected_tex'))); ?>
+                            </div>
+                            <div class="col-md-6">
+                                <h4 class="no-mtop">
+                                    <i class="fa fa-question-circle" data-toggle="tooltip"
+                                       data-title="<?php echo _l('customer_shipping_address_notice'); ?>"></i>
+                                    <?php echo _l('shipping_address'); ?> <a href="#"
+                                                                             class="pull-right customer-copy-billing-address"><small
+                                                class="font-medium-xs"><?php echo _l('customer_billing_copy'); ?></small></a>
+                                </h4>
+                                <hr/>
+                                <?php $value = (isset($client) ? $client->shipping_street : ''); ?>
+                                <?php echo render_textarea('shipping_street', 'shipping_street', $value); ?>
+                                <?php $value = (isset($client) ? $client->shipping_city : ''); ?>
+                                <?php echo render_input('shipping_city', 'shipping_city', $value); ?>
+                                <?php $value = (isset($client) ? $client->shipping_state : ''); ?>
+                                <?php echo render_input('shipping_state', 'shipping_state', $value); ?>
+                                <?php $value = (isset($client) ? $client->shipping_zip : ''); ?>
+                                <?php echo render_input('shipping_zip', 'shipping_zip', $value); ?>
+                                <?php $selected = (isset($client) ? $client->shipping_country : ''); ?>
+                                <?php echo render_select('shipping_country', $countries, array('country_id', array('short_name')), 'shipping_country', $selected, array('data-none-selected-text' => _l('dropdown_non_selected_tex'))); ?>
+                            </div>
+                            <?php if (isset($client) &&
+                                (total_rows(db_prefix() . 'invoices', array('clientid' => $client->userid)) > 0 || total_rows(db_prefix() . 'estimates', array('clientid' => $client->userid)) > 0 || total_rows(db_prefix() . 'creditnotes', array('clientid' => $client->userid)) > 0)) { ?>
+                                <div class="col-md-12">
+                                    <div class="alert alert-warning">
+                                        <div class="checkbox checkbox-default">
+                                            <input type="checkbox" name="update_all_other_transactions"
+                                                   id="update_all_other_transactions">
+                                            <label for="update_all_other_transactions">
+                                                <?php echo _l('customer_update_address_info_on_invoices'); ?><br/>
+                                            </label>
+                                        </div>
+                                        <b><?php echo _l('customer_update_address_info_on_invoices_help'); ?></b>
+                                        <div class="checkbox checkbox-default">
+                                            <input type="checkbox" name="update_credit_notes" id="update_credit_notes">
+                                            <label for="update_credit_notes">
+                                                <?php echo _l('customer_profile_update_credit_notes'); ?><br/>
+                                            </label>
+                                        </div>
+                                    </div>
+                                </div>
+                            <?php } ?>
+                        </div>
+                    </div>
+                </div>
+            </div>
+        </div>
+    </div>
+    <?php echo form_close(); ?>
 </div>
-<?php if(isset($client)){ ?>
-<?php if (has_permission('customers', '', 'create') || has_permission('customers', '', 'edit')) { ?>
-<div class="modal fade" id="customer_admins_assign" tabindex="-1" role="dialog">
-   <div class="modal-dialog">
-      <?php echo form_open(admin_url('clients/assign_admins/'.$client->userid)); ?>
-      <div class="modal-content">
-         <div class="modal-header">
-            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
-            <h4 class="modal-title"><?php echo _l('assign_admin'); ?></h4>
-         </div>
-         <div class="modal-body">
-            <?php
-               $selected = array();
-               foreach($customer_admins as $c_admin){
-                  array_push($selected,$c_admin['staff_id']);
-               }
-               echo render_select('customer_admins[]',$staff,array('staffid',array('firstname','lastname')),'',$selected,array('multiple'=>true),array(),'','',false); ?>
-         </div>
-         <div class="modal-footer">
-            <button type="button" class="btn btn-default" data-dismiss="modal"><?php echo _l('close'); ?></button>
-            <button type="submit" class="btn btn-info"><?php echo _l('submit'); ?></button>
-         </div>
-      </div>
-      <!-- /.modal-content -->
-      <?php echo form_close(); ?>
-   </div>
-   <!-- /.modal-dialog -->
-</div>
-<!-- /.modal -->
-<?php } ?>
+<?php if (isset($client)) { ?>
+    <?php if (has_permission('customers', '', 'create') || has_permission('customers', '', 'edit')) { ?>
+        <div class="modal fade" id="customer_admins_assign" tabindex="-1" role="dialog">
+            <div class="modal-dialog">
+                <?php echo form_open(admin_url('clients/assign_admins/' . $client->userid)); ?>
+                <div class="modal-content">
+                    <div class="modal-header">
+                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
+                                    aria-hidden="true">&times;</span></button>
+                        <h4 class="modal-title"><?php echo _l('assign_admin'); ?></h4>
+                    </div>
+                    <div class="modal-body">
+                        <?php
+                        $selected = array();
+                        foreach ($customer_admins as $c_admin) {
+                            array_push($selected, $c_admin['staff_id']);
+                        }
+                        echo render_select('customer_admins[]', $staff, array('staffid', array('firstname', 'lastname')), '', $selected, array('multiple' => true), array(), '', '', false); ?>
+                    </div>
+                    <div class="modal-footer">
+                        <button type="button" class="btn btn-default"
+                                data-dismiss="modal"><?php echo _l('close'); ?></button>
+                        <button type="submit" class="btn btn-info"><?php echo _l('submit'); ?></button>
+                    </div>
+                </div>
+                <!-- /.modal-content -->
+                <?php echo form_close(); ?>
+            </div>
+            <!-- /.modal-dialog -->
+        </div>
+        <!-- /.modal -->
+    <?php } ?>
 <?php } ?>
 <?php $this->load->view('admin/clients/client_group'); ?>
